/* tslint:disable */
/* eslint-disable */
/**
 * GM Properties API
 * OpenAPI-Spezifikation der GM Properties-API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModelDate } from './ModelDate';
import {
    ModelDateFromJSON,
    ModelDateFromJSONTyped,
    ModelDateToJSON,
    ModelDateToJSONTyped,
} from './ModelDate';
import type { ModelString } from './ModelString';
import {
    ModelStringFromJSON,
    ModelStringFromJSONTyped,
    ModelStringToJSON,
    ModelStringToJSONTyped,
} from './ModelString';

/**
 * 
 * @export
 * @interface Expense
 */
export interface Expense {
    /**
     * Empf√§nger der Zahlung
     * @type {ModelString}
     * @memberof Expense
     */
    receiver?: ModelString;
    /**
     * Verwendungszweck
     * @type {ModelString}
     * @memberof Expense
     */
    purposeOfUse?: ModelString;
    /**
     * Betrag
     * @type {number}
     * @memberof Expense
     */
    sum?: number;
    /**
     * Rechnungsdatum
     * @type {ModelDate}
     * @memberof Expense
     */
    invoiceDate?: ModelDate;
}

/**
 * Check if a given object implements the Expense interface.
 */
export function instanceOfExpense(value: object): value is Expense {
    return true;
}

export function ExpenseFromJSON(json: any): Expense {
    return ExpenseFromJSONTyped(json, false);
}

export function ExpenseFromJSONTyped(json: any, ignoreDiscriminator: boolean): Expense {
    if (json == null) {
        return json;
    }
    return {
        
        'receiver': json['receiver'] == null ? undefined : ModelStringFromJSON(json['receiver']),
        'purposeOfUse': json['purposeOfUse'] == null ? undefined : ModelStringFromJSON(json['purposeOfUse']),
        'sum': json['sum'] == null ? undefined : json['sum'],
        'invoiceDate': json['invoiceDate'] == null ? undefined : ModelDateFromJSON(json['invoiceDate']),
    };
}

  export function ExpenseToJSON(json: any): Expense {
      return ExpenseToJSONTyped(json, false);
  }

  export function ExpenseToJSONTyped(value?: Expense | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'receiver': ModelStringToJSON(value['receiver']),
        'purposeOfUse': ModelStringToJSON(value['purposeOfUse']),
        'sum': value['sum'],
        'invoiceDate': ModelDateToJSON(value['invoiceDate']),
    };
}

