name: Deploy Staging

# on:
#   push:
#     branches: ["dev"]
#   pull_request:
#     branches: ["dev"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Read versions from versions.yaml
        id: read_versions
        run: |
          VERSION_PROPERTY=$(yq eval '.property-backend' versions.yaml)
          VERSION_OWNER=$(yq eval '.owner-backend' versions.yaml)
          VERSION_FINANCE=$(yq eval '.finance-backend' versions.yaml)
          VERSION_MANAGEMENT=$(yq eval '.management-frontend' versions.yaml)
          VERSION_OWNER_FRONTEND=$(yq eval '.owner-frontend' versions.yaml)
          echo "VERSION_PROPERTY=$VERSION_PROPERTY" >> $GITHUB_ENV
          echo "VERSION_OWNER=$VERSION_OWNER" >> $GITHUB_ENV
          echo "VERSION_FINANCE=$VERSION_FINANCE" >> $GITHUB_ENV
          echo "VERSION_MANAGEMENT=$VERSION_MANAGEMENT" >> $GITHUB_ENV
          echo "VERSION_OWNER_FRONTEND=$VERSION_OWNER_FRONTEND" >> $GITHUB_ENV

      - name: Build Property with Maven
        run: mvn -B clean package -Pdev --file property-backend/pom.xml

      - name: Build owner with Maven
        run: mvn -B clean package -Pdev --file owner-backend/pom.xml
        
      - name: Build finance with Maven
        run: mvn -B clean package -Pdev --file finance-backend/pom.xml

      - name: Upload Property JAR Artifact
        uses: actions/upload-artifact@v3
        with:
          name: property-backend-jar
          path: property-backend/target/*.jar

      - name: Upload Owner JAR Artifact
        uses: actions/upload-artifact@v3
        with:
          name: owner-backend-jar
          path: owner-backend/target/*.jar

      - name: Upload Owner JAR Artifact
        uses: actions/upload-artifact@v3
        with:
          name: finance-backend-jar
          path: finance-backend/target/*.jar

  docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Read versions from versions.yaml
        id: read_versions
        run: |
          VERSION_PROPERTY=$(yq eval '.property-backend' versions.yaml)
          VERSION_OWNER=$(yq eval '.owner-backend' versions.yaml)
          VERSION_FINANCE=$(yq eval '.finance-backend' versions.yaml)
          VERSION_MANAGEMENT=$(yq eval '.management-frontend' versions.yaml)
          VERSION_OWNER_FRONTEND=$(yq eval '.owner-frontend' versions.yaml)
          echo "VERSION_PROPERTY=$VERSION_PROPERTY" >> $GITHUB_ENV
          echo "VERSION_OWNER=$VERSION_OWNER" >> $GITHUB_ENV
          echo "VERSION_FINANCE=$VERSION_FINANCE" >> $GITHUB_ENV
          echo "VERSION_MANAGEMENT=$VERSION_MANAGEMENT" >> $GITHUB_ENV
          echo "VERSION_OWNER_FRONTEND=$VERSION_OWNER_FRONTEND" >> $GITHUB_ENV

      - name: Download Property JAR Artifact
        uses: actions/download-artifact@v3
        with:
          name: property-backend-jar
          path: ./property-backend/target

      - name: Download Owner JAR Artifact
        uses: actions/download-artifact@v3
        with:
          name: owner-backend-jar
          path: ./owner-backend/target
      
      - name: Download Finance JAR Artifact
        uses: actions/download-artifact@v3
        with:
          name: finance-backend-jar
          path: ./finance-backend/target
      
      - name: Create Management .env file
        run: |
          echo "NEXT_PROPERTY_BASE_PATH=${{ vars.PROPERTY_BASE_PATH }}" > management-frontend/.env.production
          echo "NEXT_FINANCE_BASE_PATH=${{ vars.FINANCE_BASE_PATH }}" > management-frontend/.env.production
          echo "NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.FIREBASE_KEY }}" >> management-frontend/.env.production
          echo "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_DOMAIN}}" >> management-frontend/.env.production
      - name: Create owner .env file
        run: |
          echo "NEXT_PUBLIC_BASE_PATH=${{ vars.OWNER_STAGING_BASE_PATH }}" > owner-frontend/.env.production
          echo "NEXT_PUBLIC_APPLICATION_NAME=${{ vars.OWNER_STAGING_APPLICATION_NAME }}" >> owner-frontend/.env.production
          echo "NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.FIREBASE_KEY }}" >> owner-frontend/.env.production
          echo "NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_DOMAIN}}" >> owner-frontend/.env.production
      - name: Create accounts.json file
        run: |
          echo "${{ secrets.DEV_SERVICEACCOUNT }}" > owner-backend/terraform/account.json
      - name: Set version variable
        run: echo "VERSION=v1.0.0" >> $GITHUB_ENV

      - name: Build Property Backend
        run: |
          docker build -t com/group/property-backend:${{ env.VERSION_PROPERTY }} ./property-backend
          docker tag com/group/property-backend:${{ env.VERSION_PROPERTY }} europe-west1-docker.pkg.dev/ca-test2-438111/cloud-run-source-deploy/com/group/property-backend:${{ env.VERSION_PROPERTY }}

      - name: Build Owner Backend
        run: |
          docker build -t com/group/owner-backend:${{ env.VERSION_OWNER }} ./owner-backend
          docker tag com/group/owner-backend:${{ env.VERSION_OWNER }} europe-west1-docker.pkg.dev/ca-test2-438111/cloud-run-source-deploy/com/group/owner-backend:${{ env.VERSION_OWNER }}

      - name: Build Finance Backend
        run: |
          docker build -t com/group/finance-backend:${{ env.VERSION_FINANCE }} ./finance-backend
          docker tag com/group/finance-backend:${{ env.VERSION_FINANCE }} europe-west1-docker.pkg.dev/ca-test2-438111/cloud-run-source-deploy/com/group/finance-backend:${{ env.VERSION_FINANCE }}

      - name: Build Management Frontend
        run: |
          docker build -t com/group/management-frontend:${{ env.VERSION_MANAGEMENT }} ./management-frontend
          docker tag com/group/management-frontend:${{ env.VERSION_MANAGEMENT }} europe-west1-docker.pkg.dev/ca-test2-438111/cloud-run-source-deploy/com/group/management-frontend:${{ env.VERSION_MANAGEMENT }}

      - name: Build Owner Frontend
        run: |
          docker build -t com/group/owner-frontend:${{ env.VERSION_OWNER_FRONTEND }} ./owner-frontend
          docker tag com/group/owner-frontend:${{ env.VERSION_OWNER_FRONTEND }} europe-west1-docker.pkg.dev/ca-test2-438111/cloud-run-source-deploy/com/group/owner-frontend:${{ env.VERSION_OWNER_FRONTEND }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          project_id: ca-test2-438111
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker to use gcloud credentials
        run: |
          gcloud auth configure-docker europe-west1-docker.pkg.dev
          gcloud config set project ca-test2-438111

      - name: Push backend images to GCR
        run: |
          docker push europe-west1-docker.pkg.dev/ca-test2-438111/cloud-run-source-deploy/com/group/property-backend:${{ env.VERSION_PROPERTY }}
          docker push europe-west1-docker.pkg.dev/ca-test2-438111/cloud-run-source-deploy/com/group/owner-backend:${{ env.VERSION_OWNER }}
          docker push europe-west1-docker.pkg.dev/ca-test2-438111/cloud-run-source-deploy/com/group/finance-backend:${{ env.VERSION_FINANCE }}

      - name: Push frontend images to GCR
        run: |
          docker push europe-west1-docker.pkg.dev/ca-test2-438111/cloud-run-source-deploy/com/group/management-frontend:${{ env.VERSION_MANAGEMENT }}
          docker push europe-west1-docker.pkg.dev/ca-test2-438111/cloud-run-source-deploy/com/group/owner-frontend:${{ env.VERSION_OWNER_FRONTEND }}
  deploy:
    needs: docker
    runs-on: ubuntu-latest
    steps:
     - uses: actions/checkout@v4
     - name: Read versions from versions.yaml
       id: read_versions
       run: |
         VERSION_OWNER=$(yq eval '.owner-backend' versions.yaml)
         VERSION_OWNER_FRONTEND=$(yq eval '.owner-frontend' versions.yaml)
         echo "VERSION_OWNER=$VERSION_OWNER" >> $GITHUB_ENV
         echo "VERSION_OWNER_FRONTEND=$VERSION_OWNER_FRONTEND" >> $GITHUB_ENV
     - name: Authenticate to Google Cloud
       uses: google-github-actions/auth@v2
       with:
          project_id: ca-test2-438111
          credentials_json: ${{ secrets.GCP_SA_KEY }}
     - name: Configure Docker to use gcloud credentials
       run: |
          gcloud auth configure-docker europe-west1-docker.pkg.dev
          gcloud config set project ca-test2-438111
     - name: Deploy Backends to Cloud Run
       run: |
          gcloud run deploy owner-backend --image=europe-west1-docker.pkg.dev/ca-test2-438111/cloud-run-source-deploy/com/group/owner-backend:${{ env.VERSION_OWNER }} --platform=managed --region=europe-west1 --allow-unauthenticated --port=8081 --memory=1Gi --service-account ${{ secrets.DEV_SERVICEACCOUNT }} --set-env-vars "SPRING_PROFILES_ACTIVE=dev"
     - name: Deploy frontends to Cloud Run
       run: |
          gcloud run deploy owner-frontend --image=europe-west1-docker.pkg.dev/ca-test2-438111/cloud-run-source-deploy/com/group/owner-frontend:${{ env.VERSION_OWNER_FRONTEND }} --platform=managed --region=europe-west1 --allow-unauthenticated --port=8081 --memory=1Gi --service-account ${{ secrets.DEV_SERVICEACCOUNT }} --set-env-vars "SPRING_PROFILES_ACTIVE=dev"
