name: Deploy Owner-Backend

on:
  push:
    branches: ["dev"]
    paths:
      - "owner-backend/**"
  pull_request:
    branches: ["dev"]
    paths:
      - "owner-backend/**"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Read versions from versions.yaml
        id: read_versions
        run: |
          VERSION_OWNER=$(yq eval '.owner-backend' owner-backend/version.yaml)  
          echo "VERSION_OWNER=$VERSION_OWNER" >> $GITHUB_ENV

      - name: Build owner with Maven
        run: mvn -B clean package -Pdev --file owner-backend/pom.xml

      - name: Upload Owner JAR Artifact
        uses: actions/upload-artifact@v3
        with:
          name: owner-backend-jar
          path: owner-backend/target/*.jar

  docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Read versions from versions.yaml
        id: read_versions
        run: |
          VERSION_OWNER=$(yq eval '.owner-backend' owner-backend/version.yaml)
          echo "VERSION_OWNER=$VERSION_OWNER" >> $GITHUB_ENV

      - name: Download Owner JAR Artifact
        uses: actions/download-artifact@v3
        with:
          name: owner-backend-jar
          path: ./owner-backend/target
      
      - name: Create account.json file
        run: |
          echo "${{ secrets.DEV_SERVICEACCOUNT }}" | tr -d '\r' > owner-backend/terraform/account.json
        shell: bash

      - name: Validate account.json
        run: jq . owner-backend/terraform/account.json
        shell: bash

      - name: Build Owner Backend
        run: |
          docker build -t com/group/owner-backend:${{ env.VERSION_OWNER }} ./owner-backend
          docker tag com/group/owner-backend:${{ env.VERSION_OWNER }} europe-west1-docker.pkg.dev/ca-test2-438111/cloud-run-source-deploy/com/group/owner-backend:${{ env.VERSION_OWNER }}

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          project_id: ca-test2-438111
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker to use gcloud credentials
        run: |
          gcloud auth configure-docker europe-west1-docker.pkg.dev
          gcloud config set project ca-test2-438111

      - name: Push backend images to GCR
        run: |
          docker push europe-west1-docker.pkg.dev/ca-test2-438111/cloud-run-source-deploy/com/group/owner-backend:${{ env.VERSION_OWNER }}
  deploy:
    needs: docker
    runs-on: ubuntu-latest
    steps:
     - uses: actions/checkout@v4
     - name: Read versions from versions.yaml
       id: read_versions
       run: |
         VERSION_OWNER=$(yq eval '.owner-backend' owner-backend/version.yaml)
         echo "VERSION_OWNER=$VERSION_OWNER" >> $GITHUB_ENV
     - name: Authenticate to Google Cloud
       uses: google-github-actions/auth@v2
       with:
          project_id: ca-test2-438111
          credentials_json: ${{ secrets.GCP_SA_KEY }}
     - name: Configure Docker to use gcloud credentials
       run: |
          gcloud auth configure-docker europe-west1-docker.pkg.dev
          gcloud config set project ca-test2-438111
     - name: Deploy Backend to Cloud Run
       run: |
          gcloud run deploy owner-backend --image=europe-west1-docker.pkg.dev/ca-test2-438111/cloud-run-source-deploy/com/group/owner-backend:${{ env.VERSION_OWNER }} --platform=managed --region=europe-west1 --allow-unauthenticated --port=8081 --memory=1Gi --service-account ${{ secrets.DEV_SERVICEACCOUNT }} --set-env-vars "SPRING_PROFILES_ACTIVE=dev"